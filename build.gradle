buildscript {
	repositories {
		jcenter()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.5-SNAPSHOT'
		classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
	}
}

apply plugin: 'fabric-loom'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven {
		name "Modmuss50 Repository"
		url 'https://maven.fabricmc.net/'
	}
	maven { url "https://dl.bintray.com/shedaniel/shedaniel-mods" }
	maven { url 'https://jitpack.io' }
}

minecraft {
	accessWidener 'src/main/resources/vanillafix_aw.txt'
}

configurations {
	shade
}

tasks.remapJar.dependsOn(shadowJar)
(tasks.remapJar.input as FileSystemLocationProperty<? extends FileSystemLocation>).set(shadowJar.archivePath)

dependencies {
	implementation "blue.endless:jankson:1.1.0"
	shade "blue.endless:jankson:1.1.0"
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Cos why not
	modImplementation "com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}"
	include "com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}"

	// Compatibility
	modImplementation 'com.github.jellysquid3:lithium-fabric:90c2427'
	modImplementation 'com.github.jellysquid3:phosphor-fabric:0749029'

	// Fun
	modRuntime ('me.shedaniel:RoughlyEnoughItems:5.6.1')  {
		exclude module: 'fabric-api'
	}

	modImplementation ('me.shedaniel.cloth:config-2:4.8.2') {
		exclude module: 'fabric-api'
	}
	include 'me.shedaniel.cloth:config-2:4.8.2'

	// Accessing the config
	modImplementation('io.github.prospector:modmenu:1.14.6+build.31') {
		exclude module: 'fabric-api'
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

shadowJar {
	configurations = [project.configurations.shade]
	relocate 'blue.endless.jankson', 'org.dimdev.vanillafix.shadowed.blue.endless.jankson'
}
