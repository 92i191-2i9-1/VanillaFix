buildscript {
	repositories {
		jcenter()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.6-SNAPSHOT'
		classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
	}
}

apply plugin: 'fabric-loom'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = computeVersion(project.mod_version)
group = project.maven_group

static def computeVersion(String version) {
	if (version.contains("beta")) {
		return version + "-" + Calendar.getInstance().getTime().format("dd-MM-yyyy")
	}
	return version
}

repositories {
	mavenCentral()
	maven { url "https://dl.bintray.com/shedaniel/shedaniel-mods" }
	maven { url 'https://jitpack.io' }
	jcenter()
}

minecraft {
	accessWidener 'src/main/resources/vanillafix_aw.txt'
}

dependencies {
	minecraft "com.mojang:minecraft:1.16.5"
	mappings "net.fabricmc:yarn:1.16.5+build.3:v2"
	modImplementation "net.fabricmc:fabric-loader:0.11.1"
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.30.0+1.16"

	// Cos why not
	modImplementation "com.github.Chocohead:Fabric-ASM:v2.1"
	include "com.github.Chocohead:Fabric-ASM:v2.1"

	// Compatibility
	modImplementation 'com.github.jellysquid3:lithium-fabric:90c2427'
	modImplementation 'com.github.jellysquid3:phosphor-fabric:0749029'

	// Fun
	modRuntime ('me.shedaniel:RoughlyEnoughItems:5.6.1')  {
		exclude module: 'fabric-api'
	}

	modImplementation ('me.shedaniel.cloth:config-2:4.8.2') {
		exclude module: 'fabric-api'
	}
	include 'me.shedaniel.cloth:config-2:4.8.2'
	modImplementation include('me.sargunvohra.mcmods:autoconfig1u:3.3.1')

	// Accessing the config
	modImplementation('io.github.prospector:modmenu:1.14.6+build.31') {
		exclude module: 'fabric-api'
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

